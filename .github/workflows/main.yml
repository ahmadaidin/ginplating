name: Test

on:
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4.0.1
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum

      - name: Lint using golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
        # Optional: working directory, useful for monorepos
        # working-directory: somedir

        # Optional: golangci-lint command line arguments.
        # args: --issues-exit-code=0

        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

        # Optional: if set to true then the all caching functionality will be complete disabled,
        #           takes precedence over all other caching options.
        # skip-cache: true

        # Optional: if set to true then the action don't cache or restore ~/go/pkg.
        # skip-pkg-cache: true

        # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
        # skip-build-cache: true
  test:
    runs-on: ubuntu-latest
    name: Test
    container: bitnami/git
    services:
      mongodb:
        image: mongo:6

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4.0.1
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum

      - name: Build
        run: go build -o main main.go

      - name: Test
        run: go test -v ./...
        env:
          # The hostname used to communicate with the service container
          MONGODB_HOST: mongodb
          # The default mongo port
          MONGODB_PORT: 27017
